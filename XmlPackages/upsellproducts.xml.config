<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Upsell Products" debug="false" includeentityhelper="false">
    <query name="UpsellProducts" rowElementName="Product" runif="Productid">
        <sql>
            <![CDATA[
				          exec aspdnsf_GetUpsellProducts @productID, @customerlevelID, @invFilter, @storeID, @FilterProduct
            ]]>
            </sql>
            <queryparam paramname="@productid"        paramtype="runtime"   requestparamname="Productid"                                  sqlDataType="int"   defvalue="0"  validationpattern="" />
            <queryparam paramname="@CustomerLevelID"  paramtype="runtime"   requestparamname="CustomerLevelID"                            sqlDataType="int"   defvalue="0"  validationpattern="" />
            <queryparam paramname="@InvFilter"        paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel" sqlDataType="int"   defvalue="0"  validationpattern="" />
			      <queryparam paramname="@StoreID"		      paramtype="runtime"   requestparamname="StoreID"									                  sqlDataType="int"   defvalue="1"  validationpattern="" />
            <queryparam paramname="@FilterProduct"    paramtype="runtime"   requestparamname="FilterProduct"										           sqlDataType="bit"	defvalue="0"  validationpattern="" />
        </query>

        <query name="UpsellProductsCart" rowElementName="CartProduct" runif="cart">
            <sql>
                <![CDATA[
                declare @tmp table (productid int, UpsellProductID int)
                declare @UpsellProducts varchar(8000), @pid int
                set @UpsellProducts = ''

                select top 1 @pid = p.productid, @UpsellProducts = isnull(cast(UpsellProducts as varchar(8000)), '')
                from dbo.shoppingcart sc with (nolock) join dbo.product p with (nolock) on sc.productid = p.productid 
                where customerid = @CustomerID
                ORDER BY sc.productid 

                while @@rowcount > 0 begin
                    insert @tmp select @pid, convert(int, s.items) UpsellProductID from dbo.split(@UpsellProducts , ',') s left join @tmp t on t.UpsellProductID = convert(int, s.items) where t.productid is null
                    
                    select top 1 @pid = p.productid, @UpsellProducts =isnull(cast(UpsellProducts as varchar(8000)), '')
                    from dbo.shoppingcart sc with (nolock) join dbo.product p with (nolock) on sc.productid = p.productid 
                    where customerid = @CustomerID and sc.productid > @pid
                    ORDER BY sc.productid 
                end
                
                --For multi store. Delete items not included in a specific store.
                IF EXISTS(SELECT TOP 1 Name FROM GlobalConfig WHERE Name = 'AllowProductFiltering' AND ConfigValue= 'true')
	              BEGIN
		              DELETE @tmp WHERE UpsellProductID NOT IN (SELECT ProductID FROM ProductStore WHERE StoreID = @StoreID)
	              END  

                select top {limit} 1-(p2.UpsellProductDiscountPercentage/100) UpsellDiscMultiplier,
                       p.ProductID, p.Name, p.SEName, p.Summary, p.Description, rtrim(pv.Name) VariantName, p.SEAltText, p.ImageFilenameOverride, p.TaxClassID,
                       p.SKU, pv.VariantID, p.HidePriceUntilCart, pv.Price, isnull(pv.SalePrice, 0) SalePrice, isnull(ep.Price, 0) ExtendedPrice, pv.Points, 
                       sp.Name SalesPromptName
                from @tmp t
                    join dbo.product p with (nolock) on p.productid  = t.UpsellProductID  
                    join dbo.product p2 with (nolock) on p2.productid  = t.productid  
                    join dbo.productvariant pv  with (nolock) on p.productid = pv.productid and pv.IsDefault = 1
                    left join dbo.SalesPrompt sp  with (nolock) on p.SalesPromptID = sp.SalesPromptID
                    left join dbo.ExtendedPrice ep  with (nolock) on ep.VariantID = pv.VariantID and ep.CustomerLevelID = @CustomerLevelID
                    left join (select VariantID, sum(quan) quan from Inventory with (nolock) group by VariantID) i on i.VariantID = pv.VariantID
                where (p.RequiresTextOption IS NULL or p.RequiresTextOption=0) 
                    and (isnull(convert(nvarchar(4000), Sizes), '') = '' or convert(nvarchar(4000), Sizes) not like '%>[^<>]%_[^<>]%<%') 
                    and (isnull(convert(nvarchar(4000), Colors), '') = '' or convert(nvarchar(4000), Colors) not like '%>[^<>]%_[^<>]%<%') 
                    and p.IsAKit=0 and p.IsAPack=0 and p.IsCallToOrder = 0
                    and p.ProductID not in (select ProductID from ShoppingCart  with (nolock) where CartType=0 and CustomerID=@CustomerID)
                    and case p.TrackInventoryBySizeAndColor when 1 then isnull(i.quan, 0) else pv.inventory end >= @InvFilter
                    and p.published > 0

                ]]>
            </sql>
        <querystringreplace replaceTag="{limit}"  replacetype="appconfig" replaceparamname="UpsellProductsLimitNumberOnCart"   defvalue="10" validationpattern="\d{1,10}" />

        <queryparam paramname="@CustomerID"      paramtype="system"     requestparamname="CustomerID"                                 sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@CustomerLevelID" paramtype="runtime"    requestparamname="CustomerLevelID"                            sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@InvFilter"       paramtype="appconfig"  requestparamname="HideProductsWithLessThanThisInventoryLevel" sqlDataType="int" defvalue="0"  validationpattern="" />
        <queryparam paramname="@StoreID"		     paramtype="runtime"    requestparamname="StoreID"									                  sqlDataType="int" defvalue="1"  validationpattern="" />
    </query>


    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                        xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
            <xsl:output method="html" omit-xml-declaration="yes" />

            <xsl:param name="UpsellProductsGridColWidth" select="aspdnsf:AppConfig('UpsellProductsGridColWidth')"></xsl:param>
            <xsl:param name="UpsellProductsCount" select="count(/root/UpsellProducts/Product)"></xsl:param>

          <xsl:variable name="ProductIdsOnPage">
            <xsl:for-each select="/root/UpsellProducts/Product/ProductID">
              <xsl:value-of select="." />
              <xsl:if test="position() != last()">
                <xsl:text>,</xsl:text>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />


          <xsl:template match="/">

                <xsl:if test="number($UpsellProductsCount) &gt; 0">
                    <script type="text/javascript">
                        <![CDATA[
                        function UpsellClick(theItem)
                        {
                            var UpsellItemList = '';
                            var whichitem = 0;
                            var UpsellList = document.getElementsByName('Upsell');
							var UpsellProductList = document.getElementsByName('UpsellProducts');							
                            for (i=0; i<UpsellList.length; i++)
                            {
                                if (UpsellList[i].checked && UpsellList[i].value != '0')
                                {
                                    if (UpsellItemList.length > 0)
                                    {
                                        UpsellItemList = UpsellItemList + ',';
                                    }
                                    UpsellItemList = UpsellItemList + UpsellList[i].value;
                                }
                            }
							
							for(j=0; j<UpsellProductList.length; j++)
							{
								UpsellProductList[j].value = UpsellItemList;
							}	
                        }
                    ]]>
                    </script>
                 
                    <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
                        <tr>
                            <td align="left" valign="top">
                                <img src="{aspdnsf:LocateImageURL(concat('App_Themes/Skin_', /root/System/SkinID, '/images/Upsellproducts.gif'))}" border="0"/>
                                <br/>
                                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
                                    <tr>
                                        <td align="left" valign="top" class="RelatedProductsBoxStyle">
                                            <xsl:choose>
                                                <xsl:when test="/root/Runtime/teaser != ''">
                                                    <p>
                                                        <b>
                                                            <xsl:value-of select="/root/Runtime/teaser" />
                                                        </b>
                                                    </p>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:value-of select="aspdnsf:Topic('UpsellTeaser')" disable-output-escaping="yes" />
                                                </xsl:otherwise>
                                            </xsl:choose>

                                            <xsl:choose>
                                                <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RelatedProductsFormat')) = 'grid'">
                                                  <table width="100%">
                                                    <xsl:apply-templates select="/root/UpsellProducts/Product" />
                                                  </table>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <table width="100%">
                                                        <xsl:for-each select="/root/UpsellProducts/Product">
                                                            <xsl:variable name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
                                                            <xsl:variable name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
                                                            <xsl:variable name="AltText">
                                                                <xsl:choose>
                                                                    <xsl:when test="$pSEAltText=''"><xsl:value-of select="$pName" /></xsl:when>
                                                                    <xsl:otherwise><xsl:value-of select="$pSEAltText" /></xsl:otherwise>
                                                                </xsl:choose>
                                                            </xsl:variable>
                                                            <tr>
                                                                <td width="100%">
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td valign="center">
                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 0, $AltText)" disable-output-escaping="yes"/>
                                                                                </a>
                                                                            </td>
                                                                            <td width="100%">
                                                                                <table width="100%">
                                                                                    <tr>
                                                                                        <td>
                                                                                            <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                <xsl:value-of select="$pName" disable-output-escaping="yes" />
                                                                                            </a>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <span class="a2">
                                                                                                <xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
                                                                                            </span>
                                                                                            <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
                                                                                               <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
                                                                                            </xsl:if>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <div class="a1" style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px;">
                                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                    <xsl:value-of select="aspdnsf:StringResource('common.cs.33')" disable-output-escaping="yes" />
                                                                                                </a>
                                                                                            </div>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" onClick="UpsellClick(this);" />
                                                                                        </td>
                                                                                    </tr>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                    <xsl:if test="position() != last()">
                                                                        <hr size="1" class="LightCellText"/>
                                                                    </xsl:if>
                                                                </td>
                                                            </tr>
                                                        </xsl:for-each>
                                                    </table>
                                                </xsl:otherwise>
                                            </xsl:choose>

                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </xsl:if>
                <br/>
                <br/>
                <xsl:if test="count(/root/UpsellProductsCart/CartProduct) &gt; 0 and aspdnsf:AppConfigBool('ShowUpsellProductsOnCartPage') = 'true'">
                    <table width="100%" cellpadding="2" cellspacing="0" border="0" style="border-style: solid; border-width: 0px; border-color: #{aspdnsf:AppConfig('HeaderBGColor')};" >
                        <tr>
                            <td align="left" valign="top">
                                <img src="{aspdnsf:SkinImage('ShoppingCartUpsell.gif')}" border="0"/>
                                <br/>
                                <table width="100%" cellpadding="4" cellspacing="0" border="0" style="{aspdnsf:AppConfig('BoxFrameStyle')}">
                                    <tr>
                                        <td align="left" valign="top" class="RelatedProductsBoxStyle">
                                            <xsl:choose>
                                                <xsl:when test="/root/Runtime/teaser != ''">
                                                    <p>
                                                        <b>
                                                            <xsl:value-of select="/root/Runtime/teaser" />
                                                        </b>
                                                    </p>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:value-of select="aspdnsf:Topic('UpsellTeaser')" disable-output-escaping="yes" />
                                                </xsl:otherwise>
                                            </xsl:choose>

                                            <xsl:choose>
                                                <xsl:when test="aspdnsf:StrToLower(aspdnsf:AppConfig('RelatedProductsFormat')) = 'grid'">
                                                    <xsl:apply-templates select="/root/UpsellProductsCart/CartProduct" />
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <table width="100%">
                                                        <xsl:for-each select="/root/UpsellProductsCart/CartProduct">
                                                            <xsl:variable name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
                                                            <xsl:variable name="pSEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
                                                            <xsl:variable name="AltText">
                                                                <xsl:choose>
                                                                    <xsl:when test="$pSEAltText=''"><xsl:value-of select="$pName" /></xsl:when>
                                                                    <xsl:otherwise><xsl:value-of select="$pSEAltText" /></xsl:otherwise>
                                                                </xsl:choose>
                                                            </xsl:variable>
                                                            <tr>
                                                                <td width="100%">
                                                                    <table width="100%">
                                                                        <tr>
                                                                            <td valign="center">
                                                                                <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 0, $AltText)" disable-output-escaping="yes"/>
                                                                                </a>
                                                                            </td>
                                                                            <td width="100%">
                                                                                <table width="100%">
                                                                                    <tr>
                                                                                        <td>
                                                                                            <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                                                                                                <xsl:value-of select="$pName" disable-output-escaping="yes" />
                                                                                            </a>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                          <xsl:variable name="productId" select="ProductID" />
                                                                                          <span class="a2">
                                                                                            <xsl:value-of select="aspdnsf:GetMLValue(Description)" disable-output-escaping="yes" />
                                                                                          </span>
                                                                                          <xsl:if test="string-length($AvailablePromotions) &gt; 0">
                                                                                            <xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
                                                                                          </xsl:if>
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <xsl:value-of select="aspdnsf:GetUpsellVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, aspdnsf:GetMLValue(SalesPromptName), 0, TaxClassID, UpsellDiscMultiplier)" disable-output-escaping="yes" />
                                                                                        </td>
                                                                                    </tr>
                                                                                    <tr>
                                                                                        <td>
                                                                                            <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" onClick="UpsellClick(this);" />
                                                                                        </td>
                                                                                    </tr>
                                                                                </table>
                                                                            </td>
                                                                        </tr>
                                                                    </table>
                                                                    <xsl:if test="position() != last()">
                                                                        <hr size="1" class="LightCellText"/>
                                                                    </xsl:if>
                                                                </td>
                                                            </tr>
                                                        </xsl:for-each>
                                                    </table>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </xsl:if>
            </xsl:template>

            <xsl:template match="CartProduct">
                <xsl:variable name="delta">
                    <xsl:choose>
                        <xsl:when test="(count(/root/UpsellProductsCart/CartProduct) mod number($UpsellProductsGridColWidth)) = 0">0</xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="number($UpsellProductsGridColWidth)-(count(/root/UpsellProductsCart/CartProduct) mod number($UpsellProductsGridColWidth))"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="rows" select="ceiling(count(/root/UpsellProductsCart/CartProduct) div number($UpsellProductsGridColWidth))" />

                <xsl:if test="position() mod $UpsellProductsGridColWidth = 1">
                    <tr>
                        <xsl:for-each select=". | following-sibling::*[position() &lt; $UpsellProductsGridColWidth]">
                            <xsl:call-template name="ProductCell"></xsl:call-template>
                        </xsl:for-each>
                        <xsl:if test="ceiling(position() div  number($UpsellProductsGridColWidth)) = $rows and $delta &gt; 0">
                            <xsl:call-template name="FillerCells">
                                <xsl:with-param name="cellCount" select="$delta" />
                            </xsl:call-template>
                        </xsl:if>
                    </tr>
                </xsl:if>

            </xsl:template>


            <xsl:template match="Product">
                <xsl:variable name="delta">
                    <xsl:choose>
                        <xsl:when test="(count(/root/UpsellProducts/Product) mod number($UpsellProductsGridColWidth)) = 0">0</xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="number($UpsellProductsGridColWidth)-(count(/root/UpsellProducts/Product) mod number($UpsellProductsGridColWidth))"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:variable name="rows" select="ceiling(count(/root/UpsellProducts/Product) div number($UpsellProductsGridColWidth))" />

                <xsl:if test="position() mod $UpsellProductsGridColWidth = 1">
                  <xsl:if test="string-length($AvailablePromotions) &gt; 0">
                    <tr>
                        <xsl:for-each select=". | following-sibling::*[position() &lt; $UpsellProductsGridColWidth]">
                            <td>
                              <xsl:variable name="productId" select="ProductID" />
                              <xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
                            </td>
                          
                        </xsl:for-each>
                        <xsl:if test="ceiling(position() div  number($UpsellProductsGridColWidth)) = $rows and $delta &gt; 0">
                            <xsl:call-template name="FillerCells">
                                <xsl:with-param name="cellCount" select="$delta" />
                            </xsl:call-template>
                        </xsl:if>
                    </tr>
                  </xsl:if>
                </xsl:if>
              <xsl:if test="position() mod $UpsellProductsGridColWidth = 1">
                <tr>
                  <xsl:for-each select=". | following-sibling::*[position() &lt; $UpsellProductsGridColWidth]">
                    <xsl:call-template name="ProductCell"></xsl:call-template>
                  </xsl:for-each>
                  <xsl:if test="ceiling(position() div  number($UpsellProductsGridColWidth)) = $rows and $delta &gt; 0">
                    <xsl:call-template name="FillerCells">
                      <xsl:with-param name="cellCount" select="$delta" />
                    </xsl:call-template>
                  </xsl:if>
                </tr>
              </xsl:if>
            </xsl:template>


            <xsl:template name="ProductCell">
                <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
                <xsl:param name="AltText">
                    <xsl:choose>
                        <xsl:when test="aspdnsf:GetMLValue(SEAltText)=''"><xsl:value-of select="aspdnsf:GetMLValue(Name)" /></xsl:when>
                        <xsl:otherwise><xsl:value-of select="aspdnsf:GetMLValue(SEAltText)" /></xsl:otherwise>
                    </xsl:choose>
                </xsl:param>
              <xsl:variable name="productId" select="ProductID" />


              <td align="center" valign="top">
                <xsl:if test="string-length($AvailablePromotions) &gt; 0">
                  <div style="height:30px; z-index:900; position:relative;">
                    <xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
                  </div>
                </xsl:if>
                <div>
                  <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                    <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFilenameOverride, SKU, 'icon', 0, $AltText)" disable-output-escaping="yes"/>
                  </a>
                  <br/>
                  <a href="{aspdnsf:ProductLink(ProductID, SEName, 0, '')}">
                    <xsl:value-of select="$pName" disable-output-escaping="yes"/>
                  </a>
                </div>
                    <br/>
                        <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
                           <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Product')" disable-output-escaping="yes" />
                       </xsl:if>
                       <xsl:value-of select="aspdnsf:GetUpsellVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, aspdnsf:GetMLValue(SalesPromptName), 0, TaxClassID, UpsellDiscMultiplier)" disable-output-escaping="yes" />
                    <br/>
                    <input type="checkbox" id="Upsell" name="Upsell" value="{ProductID}" >
                        <xsl:if test="number($UpsellProductsCount) &gt; 0">
                            <xsl:attribute name="OnClick">UpsellClick(this);</xsl:attribute>
                        </xsl:if>
                    </input>
                </td>
            </xsl:template>


            <xsl:template name="FillerCells">
                <xsl:param name="cellCount"/>
                <xsl:param name="CellWidth" select="100 div $UpsellProductsGridColWidth" />
                <td width="{$CellWidth}%">&#160;</td>
                <xsl:if test="$cellCount > 1">
                    <xsl:call-template name="FillerCells">
                        <xsl:with-param name="cellCount" select="$cellCount - 1"/>
                    </xsl:call-template>
                </xsl:if>
            </xsl:template>
          
          <xsl:template match="Promotion">
            <div class="promotionCallToAction">
              <xsl:value-of select="CallToAction" />
            </div>
          </xsl:template>

        </xsl:stylesheet>
    </PackageTransform>
</package>

